@model CobanlarMarket.Models.AllViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";


}
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.3/css/bootstrap-grid.min.css" integrity="sha512-i1b/nzkVo97VN5WbEtaPebBG8REvjWeqNclJ6AItj7msdVcaveKrlIIByDpvjk5nwHjXkIqGZscVxOrTb9tsMA==" crossorigin="anonymous" referrerpolicy="no-referrer" />


<style>
    .form-control {
    
    width:100%;
    }
    .form-group button {
    width:100%;
    }
    .ajax-form{
        width:400px;

    }
    .password-container {
        position: relative;
    }

      

    #showHidePassword {
        position: absolute;
        font-size: 20px;
        right: 10px;
        top: 20%;
        cursor: pointer;
        transition: color 0.3s ease, transform 0.3s ease;
    }
        #showHidePassword.active {
            color: red; 
            transform: rotate(180deg);
        }
 
</style>
<body cz-shortcut-listen="true">

    <div id="root">
        <div>
            <div class="main-layout">
            
                <section class="account-page">
                    <div class="container">


                        <div class="account-wrapper">
                            <div class="account-column d-flex justify-content-center">



                                @using (Ajax.BeginForm("Giris", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "GirisSuccess" }, new { @class = "ajax-form w-100", id = "GirisForm" }))
                                {
                                    @Html.AntiForgeryToken()

                                    CobanlarMarket.Models.users u = new CobanlarMarket.Models.users();

                                    <div class="form-row row">
                                        <h2>Giriş Yap</h2>
                                    </div>

                                    <div class="form-group">
                                        <span>
                                            Kullanıcı Adı veya Email Adresi <span class="required">*</span>
                                        </span><br />
                                        @Html.EditorFor(model => u.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Kullanıcı Adı veya Email Adresi", id = "username" } })
                                        @Html.ValidationMessageFor(model => u.username, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-group">
                                        <label>
                                            <span>Şifre <span class="required">*</span></span>
                                        </label>
                                        <div class="password-container">
                                            @Html.EditorFor(model => u.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Şifre", required = "required", id = "password", type = "password" } })
                                            <i class="mdi mdi-eye" aria-hidden="true" id="showHidePassword"></i>
                                        </div>



                                        @Html.ValidationMessageFor(model => u.password, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="form-group">

                                        <a id="btn-forgot-password">Şifremi Unuttum</a>

                                    </div>
                                    <div class="form-group">
                                        <button type="submit" class="btn btn-sm btn-red">Giriş</button>
                                    </div>
                                }


                            </div>

                            <div class="modal" id="modal-forgot-password" style="display:none;">
                                <div class="modal-content">
                                    <form id="forgotPasswordForm" action="/Home/ForgotPassword" method="post">
                                        <input type="text"
                                               placeholder="E-Posta" id="forgotpasswordmail" style="height:48px;" />
                                        <button id="forgotpasswordsubmitbtn" class="btn btn-red" style="height:48px;">Devam Et</button>
                                    </form>

                                    <a class="close-modal"><i class="bi bi-x" id="close-forgot"></i></a>
                                </div>





                                <div class="modal-overlay" style="display:none;"></div>
                            </div>




                            <div class="account-column  d-flex justify-content-center" id="registerParent">



                                @using (Ajax.BeginForm("Register", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "GirisSuccess" }, new { @class = "ajax-form w-100", id = "RegisterForm" }))
                                {
                                    @Html.AntiForgeryToken()

                                    CobanlarMarket.Models.users u = new CobanlarMarket.Models.users();

                                    <div class="form-row row">
                                        <h2>Kayıt Ol</h2>
                                    </div>

                                    <div class="form-row row">
                                        <div class="form-group col-md-6">
                                            <span>
                                                Ad <span class="required">*</span>
                                            </span><br />
                                            @Html.EditorFor(model => u.first_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Ad", required = "required", id = "rFirstname" } })
                                            @Html.ValidationMessageFor(model => u.first_name, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-6">
                                            <span>
                                                Soyad <span class="required">*</span>
                                            </span><br />
                                            @Html.EditorFor(model => u.last_name, new { htmlAttributes = new { @class = "form-control", placeholder = "Soyad", required = "required", id = "rLastname" } })
                                            @Html.ValidationMessageFor(model => u.last_name, "", new { @class = "text-danger" })
                                        </div>

                                    </div>



                                    <div class="form-group col-12">

                                        <span>Email <span class="required">*</span></span><br />

                                        @Html.EditorFor(model => u.email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email", type = "email", required = "required", id = "rEmail" } })
                                        @Html.ValidationMessageFor(model => u.email, "", new { @class = "text-danger" })
                                    </div>

                                    <div class="form-row row">
                                        <div class="form-group col-md-6">

                                            <span>
                                                Kullanıcı Adı <span class="required">*</span>
                                            </span><br />
                                            @Html.EditorFor(model => u.username, new { htmlAttributes = new { @class = "form-control", placeholder = "Kullanıcı Adı", required = "required", id = "rUsername" } })
                                            @Html.ValidationMessageFor(model => u.username, "", new { @class = "text-danger" })
                                        </div>
                                        <div class="form-group col-md-6">

                                            <span>Şifre <span class="required">*</span></span><br />

                                            @Html.EditorFor(model => u.password, new { htmlAttributes = new { @class = "form-control", placeholder = "Şifre", required = "required", id = "rPassword", type="password" } })
                                            @Html.ValidationMessageFor(model => u.password, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <button id="registerBtn" type="submit" class="btn btn-sm btn-red">Kayıt Ol</button>
                                    </div>


                                }


                            </div>
                        </div>
                    </div>
                </section>

            </div>
        </div>
    </div>
    <script>

        $(document).on("click", "#close-forgot", function (e) {
            e.preventDefault();

            $('#modal-forgot-password').css("display", "none");
        });

        $(document).on("click", "#btn-forgot-password", function (e) {
            e.preventDefault();

            $('#modal-forgot-password').css("display", "block");
        });
        $(document).on("click", "#forgotpasswordsubmitbtn", function (e) {

            e.preventDefault();

            if ($('#forgotPasswordForm').valid()) {

                var formData = new FormData();



                var email = $('#forgotpasswordmail').val() || "";



                formData.append('Email', email);

                $.ajax({
                    url: '/Home/ForgotPassword/',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    beforeSend: function () {
                        $('#loading').show();
                    },
                    success: function (result) {
                        if (result.success) {
                            toastr.success(result.message);

                        } else {
                            toastr.error(result.message, 'Hata');
                        }


                    },
                    complete: function () {
                        $('#loading').hide();
                    },
                    error: function (xhr, status, error) {

                        window.location.href = "/Home/Auth";

                        console.error('AJAX Error: ' + error);
                    }
                });
            }
        });

        $(document).ready(function () {
            $('#GirisForm').submit(function (e) {

                e.preventDefault();
                var username = $('#username').val();
                var password = $('#password').val();
                var token = $('#GirisForm input[name="__RequestVerificationToken"]').val();



                var formData = new FormData();

                formData.append('username', username);
                formData.append('password', password);

                formData.append("__RequestVerificationToken", token);


                if ($('#GirisForm').valid()) {

                    console.log("valid");
                    $.ajax({
                        url: '/Home/Auth/',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (!result.success) {
                                toastr.error(result.message);
                            } else {

                                window.location.href = result.redirectUrl;
                            }

                        },
                        error: function (error) {
                            console.error(error);
                        }





                    });
                }



            });





            $('#RegisterForm').submit(function (e) {

                e.preventDefault();
                var name = $('#rFirstname').val();
                var lastname = $('#rLastname').val();
                var username = $('#rUsername').val();
                var password = $('#rPassword').val();
                var email = $('#rEmail').val();
                var token = $('#RegisterForm input[name="__RequestVerificationToken"]').val();


                var formData = new FormData();
                formData.append('Name', name);
                formData.append('Lastname', lastname);
                formData.append('username', username);
                formData.append('password', password);
                formData.append('Email', email);
                formData.append("__RequestVerificationToken", token);




                if ($('#RegisterForm').valid()) {

                    console.log("valid");
                    $.ajax({
                        url: '/Home/Register/',
                        type: 'POST',
                        data: formData,
                        contentType: false,
                        processData: false,
                        success: function (result) {

                            if (result.success) {


                                $('.confirmation').remove();

                                var element = '  <div class="confirmation">' +
                                    ' <p class="mb-3">E-mail adresinize gönderdiğimiz onay kodunu giriniz.</p > ' +
                                    ' <input class="me-1" type = "number" name = "code" id="confirmcode" value = "" />' +
                                    '<span class="text-danger" id="confirm-message"></span>' +
                                    '<button id="confirmbtn" class="btn btn-sm btn-red me-1" required>Onayla</button>' +
                                    '<button id="confirmcancelbtn" class="btn btn-sm btn-red" required>İptal</button>' +
                                    ' <div id="countdown"></div>' +
                                    '</div>';

                                $('#registerParent').append(element);
                                var countdownSeconds = 100;
                                startCountdown(countdownSeconds);

                                $('#RegisterForm').hide();






                            } else {
                                toastr.error(result.message);
                            }


                        },
                        error: function (error) {
                            console.error(error);
                        }





                    });
                }



            });


            $(document).on('click', '#confirmbtn', function (e) {
                e.preventDefault();
                var code = $('#confirmcode').val();
                console.log(code);

                if (code != "") {
                    $.ajax({
                        url: '/Home/ConfirmCode/',
                        type: 'POST',
                        data: { Code: code },
                        success: function (result) {

                            if (result.success) {
                                toastr.success(result.message);
                                window.location = result.redirectUrl;
                            } else {
                                toastr.error(result.message);
                            }


                        },
                        error: function (error) {
                            console.error(error);
                        }





                    });
                }


            });



            $(document).on('click', '#confirmcancelbtn', function (e) {

                $.ajax({
                    url: '/Home/ResetConfirmCode/',
                    type: 'POST',

                    success: function (result) {

                    },
                    error: function (error) {
                        console.error(error);
                    }

                });
                clearInterval(countdownInterval);
                $('.confirmation').remove();
                $('#RegisterForm').show();

            });
        });
        var countdownInterval;
        function startCountdown(duration) {
            var timer = duration, minutes, seconds;
            countdownInterval = setInterval(function () {
                minutes = Math.floor(timer / 60);
                seconds = Math.floor(timer % 60);

                // Tek basamaklı sayıları düzgün göstermek için sıfır ekleme işlemi
                minutes = minutes < 10 ? '0' + minutes : minutes;
                seconds = seconds < 10 ? '0' + seconds : seconds;

                document.getElementById('countdown').textContent = minutes + ":" + seconds;
                console.log(timer);
                if (--timer < 0) {
                    timer = 0;
                    clearInterval(countdownInterval);
                    $('#countdown').empty();
                    $('#countdown').append('<a onclick="SubmitRegisterForm()">Tekrar Gönder</a>');

                    $.ajax({
                        url: '/Home/ResetConfirmCode/',
                        type: 'POST',

                        success: function (result) {

                        },
                        error: function (error) {
                            console.error(error);
                        }

                    });

                }
            }, 1000);
        }

        function SubmitRegisterForm() {
            $('#RegisterForm').submit();
        }
        const showHidePass = document.getElementById('showHidePassword');
        const userPassword = document.getElementById('password');

        showHidePass.addEventListener('click', function () {
            userPassword.type = userPassword.type === 'password' ? 'text' : 'password';
            this.classList.toggle('mdi-eye');
            this.classList.toggle('mdi-eye-off');
            this.classList.toggle('active');
        });
    </script>
</body>
