@model CobanlarMarket.Models.AllViewModel
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    decimal? toplam = 0;
}

@Html.Raw(TempData["Iyzico"])


<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-QWTKZyjpPEjISv5WaRU9OFeRpok6YctnYmDr5pNlyT2bRjXh0JMhjY6hW+ALEwIH" crossorigin="anonymous">
<link href="~/Content/css/main.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/23.4.1/css/intlTelInput.css" integrity="sha512-tagom4p++vFNtgZ4S8pIVdKkPIH9jKvBT9velKm57KkVicjjNzVtSdTI0Yu1QrWZoP7tnIkB1y9Rmwkz2oWfMA==" crossorigin="anonymous" referrerpolicy="no-referrer" />
<script src="https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/23.4.1/js/intlTelInput.js" integrity="sha512-vny9j2GDMbTV//GY4S0kQogKJ7fK5fhSje76Z/eEodHaWIBisFm2RlsJGQVi3fxHr+wb2uJ80TJj4na722XnUw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<link href="~/Content/css/cart.css" rel="stylesheet" />

<body cz-shortcut-listen="true">
    <div id="root">
        <div>
            <div class="main-layout  justify-items-center">



                
                @{

                    var kisi = Session["User"];
                    if (kisi != null)
                    {



                        CobanlarMarket.Models.users user = kisi as CobanlarMarket.Models.users;

                        toplam = 0;
                        decimal? totalForBar = 0;
                        var companydetails = ViewBag.CompanyDetails as CobanlarMarket.Models.company_details;
                        var kargo = companydetails.shipping_cost.GetValueOrDefault(30);
                        var minAmount = companydetails.min_amonunt_for_free_shipping.GetValueOrDefault(300);
                        decimal? couponDiscount = 0;


                        foreach (var cartItem in Model.carts.Where(x => x.user_id == user.id).FirstOrDefault().cart_item)
                        {



                            totalForBar += (cartItem.quantity * cartItem.products.products_skus.FirstOrDefault().price);


                        }

                        if (totalForBar != 0)
                        {

                            <section class="cart-page">
                                <div class="container">
                                    <div class="cart-page-wrapper">
                                        <form class="cart-form">
                                            <div class="free-progress-bar">



                                                @{
                                                    if (totalForBar < minAmount)
                                                    {
                                                        decimal bar = (totalForBar.HasValue) ? (totalForBar.Value / minAmount * 100) : 0;
                                                        string formattedBar = bar.ToString("F2").Replace(',', '.');
                                                        <p class="progress-bar-title">
                                                            <strong>@(minAmount - totalForBar)₺</strong> <span>’lik daha ürün eklersen kargon ücretsiz!</span>
                                                        </p>
                                                        <div class="progress-bar"><span class="progress" style="width:@(formattedBar)%"></span></div>
                                                    }
                                                    else
                                                    {
                                                        <span>Kargo Ücretsiz!</span>
                                                        <div class="progress-bar"><span class="progress" style="width:100%;"></span></div>

                                                    }

                                                }

                                            </div>
                                            <div class="shop-table-wrapper">


                                                <table class="shop-table responsive-table">
                                                    <thead>
                                                        <tr>
                                                            <th class="product-name" colspan="2">Ürün</th>
                                                            <th class="product-quantity">Adet</th>
                                                            <th class="product-subtotal">Toplam Tutar</th>
                                                        </tr>
                                                    </thead>
                                                    <tbody class="cart-wrapper">
                                                        @foreach (var cartItem in Model.carts.Where(x => x.user_id == user.id).FirstOrDefault().cart_item)
                                                        {
                                                            <tr class="cart-item" id="@cartItem.id">

                                                                <td class="cart-image d-flex align-items-center">
                                                                    <i class="bi bi-x delete-cart" onclick="removeItemInCart(@cartItem.id)"></i>
                                                                    <img src="@cartItem.products.cover" alt="">
                                                                </td>
                                                                <td class="" data-label="Ürün">
                                                                    <div class="product-info">
                                                                        <span class="product-name">@cartItem.products.name</span>
                                                                        <span class="product-price">&#8378;@cartItem.products.products_skus.FirstOrDefault().price</span>
                                                                    </div>
                                                                </td>
                                                                <td class="product-quantity d-flex  align-items-center" data-label="Adet">
                                                                    <div class="qty-input">
                                                                        <button class="qty-count qty-count--minus" data-action="minus" type="button">-</button>
                                                                        <input class="product-qty" type="number" name="product-qty" min="-1" step="1" value="@cartItem.quantity" disabled>
                                                                        <button class="qty-count qty-count--add" data-action="add" type="button">+</button>
                                                                    </div>
                                                                </td>
                                                                <td data-label="Toplam Tutar" class="product-subtotal">&#8378;@(cartItem.quantity * cartItem.products.products_skus.FirstOrDefault().price)</td>
                                                            </tr>

                                                            toplam += (cartItem.quantity * cartItem.products.products_skus.FirstOrDefault().price);

                                                        }
                                                    </tbody>
                                                </table>
                                                <div class="actions-wrapper">
                                                    <div class="coupon">
                                                        <input type="text" class="input-text"
                                                               placeholder="Kupon Kodu" id="couponCode">
                                                        <button class="btn btn-black" id="addCoupon">
                                                            Ekle
                                                        </button>
                                                    </div>
                                                    <div class="update-cart">
                                                        <button class="btn btn-red">Sepeti Güncelle</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </form>
                                        <div class="cart-collaterals">
                                            <div class="cart-totals">
                                                <h2>Sepet Toplamı</h2>
                                                <table id="cartTotalTable">
                                                    <tbody>
                                                        <tr class="cart-subtotal">
                                                            <th>Ürün Toplamı</th>
                                                            <td><span id="subtotal">&#8378;@toplam</span></td>
                                                        </tr>
                                                        <tr id="address">
                                                            <th>Adres</th>
                                                            <td>
                                                                <ul>

                                                                    <li id="cartAddress">

                                                                        @{

                                                                            var item = Model.addresses.FirstOrDefault(x => x.user_id == user.id);
                                                                            if (item != null)
                                                                            {
                                                                                <div class="col-12 ">
                                                                                    <div class="card mb-2 text-start address-card" addressId="@item.id">
                                                                                        <div class="card-body">
                                                                                            <h5 class="card-title">@item.title</h5>
                                                                                            <h6 class="card-subtitle mb-2 text-body-secondary">@item.name @item.surname</h6>
                                                                                            <p class="card-text">@item.address.</p>


                                                                                        </div>
                                                                                    </div>
                                                                                </div>
                                                                            }
                                                                        }


                                                                        <a href="#Adres" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">
                                                                            Adres Değiştir / Ekle
                                                                        </a>

                                                                    </li>
                                                                </ul>


                                                            </td>

                                                        </tr>
                                                        @if (Model.carts.FirstOrDefault(x => x.user_id == user.id).coupon_id.HasValue)
                                                       {
                                                                var cart = Model.carts.FirstOrDefault(x => x.user_id == user.id);
                                                         if (Model.coupons.FirstOrDefault(x => x.Id == Model.carts.FirstOrDefault(c => c.user_id == user.id).coupon_id).Code != null)
                                                        {
                                                                <tr class='couponadded' style='border:none;'><th> İndirim</th>  </tr>
                                                                <tr class='couponadded'>
                                                                    <th>
                                                                        Kupon Kodu Uygulandı:<strong>  @Model.coupons.FirstOrDefault(x => x.Id == Model.carts.FirstOrDefault(c => c.user_id == user.id).coupon_id).Code   </strong>
                                                                    </th>
                                                                    <td> İndirim -&#8378; @float.Parse(cart.discount_value.Replace(".", ",")).ToString("F2").Replace(".", ",") </td>


                                                                </tr>


                                                                string discountValue = Model.carts.FirstOrDefault(x => x.user_id == user.id).discount_value;

                                                                couponDiscount = decimal.Parse(discountValue, new System.Globalization.CultureInfo("en-US"));



                                                            }
                                                        }


                                                        @{
                                                            if (toplam >= minAmount)
                                                            {
                                                                <tr class="cargo">
                                                                    <th>Kargo</th>
                                                                    <td><del>₺@kargo</del> <strong>₺0</strong></td>
                                                                </tr>
                                                                kargo = 0;

                                                            }
                                                            else
                                                            {
                                                                <tr class="cargo">
                                                                    <th>Kargo</th>
                                                                    <td>₺@kargo</td>
                                                                </tr>
                                                            }



                                                        }


                                                        <tr class="lasttotal">
                                                            <th>Toplam</th>
                                                            <td><strong id="cart-total">&#8378;@((toplam+kargo-couponDiscount).Value.ToString("F2"))</strong></td>
                                                        </tr>
                                                    </tbody>
                                                </table>


                                                <div class="checkout" id="checkout">
                                                    @Html.AntiForgeryToken()
                                                    <button class="btn btn-lg btn-red btn-order">
                                                        Sipariş Ver
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </section>





                            <div class="offcanvas offcanvas-end" data-bs-backdrop="static" tabindex="-1" id="staticBackdrop" aria-labelledby="staticBackdropLabel">
                                <div class="offcanvas-header">
                                    <button type="button" class="btn-close m-0" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                                </div>
                                <div class="offcanvas-body">
                                    <div class="row mb-2">
                                        <div class="col-6  d-flex align-items-center">
                                            <h3>Adreslerim</h3>
                                        </div>
                                        <div class="col-6 d-flex justify-content-end ">



                                            <a href="#Adres" class="btn btn-primary" data-bs-toggle="offcanvas" data-bs-target="#addAddress" aria-controls="addAddress">
                                                Yeni Adres
                                            </a>
                                        </div>
                                    </div>
                                    <form id="RemoveAddressForm" action="/Home/RemoveAddress" method="post">
                                        @Html.AntiForgeryToken()

                                        <div class="row " id="address-cards">


                                            @foreach (var itemm in Model.addresses.Where(x => x.user_id == user.id))
                                            {
                                                <div class="col-12 ">
                                                    <div class="card mb-2">
                                                        <div class="card-body">
                                                            <h5 class="card-title">@itemm.title</h5>
                                                            <h6 class="card-subtitle mb-2 text-body-secondary">@itemm.name @itemm.surname</h6>
                                                            <p class="card-text">@itemm.address.</p>
                                                            <a href="#Adres" class="card-link editbtn" data-bs-toggle="offcanvas" data-bs-target="#editAddress" aria-controls="editAddress" aId="@itemm.id">Düzenle</a>
                                                            <a onclick="RemoveAddress(@itemm.id)" class="card-link">Sil</a>
                                                            <a onclick="SelectAddress(@itemm.id)" class="card-link">Seç</a>

                                                        </div>
                                                    </div>
                                                </div>

                                            }

                                        </div>
                                    </form>

                                </div>
                            </div>

                            <style>
                                .form-group {
                                    margin-bottom: 20px;
                                }
                            </style>

                            <div class="offcanvas offcanvas-end" data-bs-backdrop="static" tabindex="-1" id="addAddress" aria-labelledby="addAddressLabel" style="overflow-y:auto;">
                                <div class="offcanvas-header">
                                    <a href="#Adres" class="btn-close m-0" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">

                                    </a>
                                </div>
                                <div class="offcanvas-body">
                                    <div class="row">
                                        @{
                                            var u = Session["User"] as CobanlarMarket.Models.users;
                                            var a = new CobanlarMarket.Models.addresses();
                                        }

                                            <form id="AddressForm" action="/Home/AddAdress" method="post">

                                                @Html.AntiForgeryToken()
                                                <div class="form-row row">
                                                    <div class="form-label text-primary">
                                                        Teslim alacak kişinin bilgileri
                                                    </div>
                                                    <div class="form-group col-md-6">
                                                        <label for="name">Ad *</label>
                                                        @*<input type="text" class="form-control" id="name" placeholder="İsim">*@
                                                        @Html.EditorFor(model => u.first_name, "İsim", new { htmlAttributes = new { name = "name", @class = "form-control", placeholder = "Ad", id = "name" } })
                                                        @Html.ValidationMessageFor(model => u.first_name, "")
                                                    </div>
                                                    <div class="form-group col-md-6">
                                                        <label for="surname">Soyad*</label>
                                                        @*<input type="text" class="form-control" id="surname" placeholder="Soyad">*@
                                                        @Html.EditorFor(model => u.last_name, "Soyad", new { htmlAttributes = new { name = "surname", @class = "form-control", placeholder = "Soyad", id = "surname" } })
                                                        @Html.ValidationMessageFor(model => u.last_name, "")

                                                    </div>

                                                    <div class="form-group col-12">
                                                        <label for="tel">Telefon Numarası *</label>
                                                        @Html.EditorFor(model => u.phone_number, "Telefon Numarası", new { htmlAttributes = new { name = "tel", @class = "form-control", id = "phone" } })
                                                        @Html.ValidationMessageFor(model => u.phone_number, "") <br />
                                                        <span id="valid-msg" class="hide">✓</span>
                                                        <span id="error-msg" class="hide"></span>
                                                        @*<input type="tel" class="form-control" id="tel" />*@
                                                        @*@Html.EditorFor(model => u.phone_number, "Telefon Numarası", new { htmlAttributes = new { type = "tel", name = "phone", @class = "form-control", placeholder = "Telefon Numarası", id = "phone", pattern = "[+]{90}[0-9]{11,14}" } })*@
                                                        @Html.ValidationMessageFor(model => u.phone_number, "")
                                                    </div>
                                                    <div class="form-group">
                                                        <label for="title">Adres Başlığı</label>
                                                        @Html.EditorFor(model => a.title, "Adres Başlığı", new { htmlAttributes = new { name = "title", @class = "form-control", placeholder = "Adres Başlığı", id = "title" } })
                                                        @Html.ValidationMessageFor(model => a.title, "")
                                                    </div>
                                                    @*<div class="form-row row">
                    <div class="form-group col-md-6">
                        <label>İl</label>
                        <select class="form-control" disabled>
                            <option value="Trabzon">Trabzon</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label>İlçe</label>
                        <select class="form-control" disabled>
                            <option value="Maçka">Maçka</option>
                        </select>
                    </div>
                </div>*@

                                                    <div class="form-group col-12">
                                                        <label>İl</label>

                                                        <select class="form-control" id="il" onchange="loadIlceler()">
                                                            <option value="">İl Seçin</option>
                                                        </select>
                                                        <span class="field-validation-valid" data-valmsg-for="il" data-valmsg-replace="true"></span>




                                                    </div>
                                                    <div class="form-group col-12">
                                                        <label>İlçe</label>

                                                        <select class="form-control" id="ilce" onchange="loadMahalleler()" disabled>
                                                            <option value="">İlçe Seçin</option>
                                                        </select>
                                                        <span class="field-validation-valid" data-valmsg-for="ilce" data-valmsg-replace="true"></span>
                                                    </div>
                                                    <div class="form-group col-12">
                                                        <label>Mahalle</label>

                                                        <select class="form-control" id="mahalle" disabled>
                                                            <option value="">Mahalle Seçin</option>
                                                        </select>
                                                        <span class="field-validation-valid" data-valmsg-for="mahalle" data-valmsg-replace="true"></span>

                                                    </div>

                                                    <div class="form-group col-12 ">
                                                        <label for="address"></label>
                                                        @Html.TextAreaFor(model => a.address, new { name = "address", @class = "form-control", placeholder = "Adres", id = "addres", rows = "4" })
                                                        @Html.ValidationMessageFor(model => a.address, "")
                                                    </div>
                                                    <div class="form-group">
                                                        <a href="#" id="submitbtn" class="btn btn-primary">Adresi Kaydet</a>
                                                    </div>
                                                </div>
                                            </form>
</div>
                                </div>
                            </div>



                            <div class="offcanvas offcanvas-end" data-bs-scroll="false   " tabindex="-1" id="editAddress" aria-labelledby="editAddressLabel" style="overflow-y:auto;">
                                <div class="offcanvas-header">
                                    <a href="#editAdres" class="btn-close m-0" data-bs-toggle="offcanvas" data-bs-target="#staticBackdrop" aria-controls="staticBackdrop">

                                    </a>
                                </div>
                                <div class="offcanvas-body">
                                    <div class="row">
                                        @{

                                        }

                                        <form id="editAddressForm" action="/Home/EditAdress" method="post">

                                            @Html.AntiForgeryToken()
                                            <div class="form-row row">
                                                <div class="form-label text-primary">
                                                    Teslim alacak kişinin bilgileri
                                                </div>
                                                <div class="form-group col-md-6">
                                                    <label for="name">Ad *</label>
                                                    @*<input type="text" class="form-control" id="name" placeholder="İsim">*@
                                                    @Html.EditorFor(model => u.first_name, "İsim", new { htmlAttributes = new { name = "name", @class = "form-control", placeholder = "Ad", id = "editname" } })
                                                    @Html.ValidationMessageFor(model => u.first_name, "")
                                                </div>
                                                <div class="form-group col-md-6">
                                                    <label for="surname">Soyad*</label>
                                                    @*<input type="text" class="form-control" id="surname" placeholder="Soyad">*@
                                                    @Html.EditorFor(model => u.last_name, "Soyad", new { htmlAttributes = new { name = "surname", @class = "form-control", placeholder = "Soyad", id = "editsurname" } })
                                                    @Html.ValidationMessageFor(model => u.last_name, "")

                                                </div>

                                                <div class="form-group col-12">
                                                    <label for="tel">Telefon Numarası *</label>
                                                    <input class="form-control shadow-none" id="editphone" type="tel"><br />
                                                    <span id="edit-valid-msg" class="hide">✓</span>
                                                    <span id="edit-error-msg" class="hide"></span>
                                                    @*<input type="tel" class="form-control" id="tel" />*@
                                                    @*@Html.EditorFor(model => u.phone_number, "Telefon Numarası", new { htmlAttributes = new { type = "tel", name = "phone", @class = "form-control", placeholder = "Telefon Numarası", id = "phone", pattern = "[+]{90}[0-9]{11,14}" } })*@
                                                    @Html.ValidationMessageFor(model => u.phone_number, "")
                                                </div>
                                                <div class="form-group">
                                                    <label for="title">Adres Başlığı</label>
                                                    @Html.EditorFor(model => a.title, "Adres Başlığı", new { htmlAttributes = new { name = "title", @class = "form-control", placeholder = "Adres Başlığı", id = "edittitle" } })
                                                    @Html.ValidationMessageFor(model => a.title, "")
                                                </div>
                                                @*<div class="form-row row">
                    <div class="form-group col-md-6">
                        <label>İl</label>
                        <select class="form-control" disabled>
                            <option value="Trabzon">Trabzon</option>
                        </select>
                    </div>
                    <div class="form-group col-md-6">
                        <label>İlçe</label>
                        <select class="form-control" disabled>
                            <option value="Maçka">Maçka</option>
                        </select>
                    </div>
                </div>*@
                                                <div class="form-group col-12">
                                                    <label>İl</label>

                                                    <select class="form-control" id="ilEdit" name="ilEdit" onchange="loadIlceler()">
                                                        <option value="">İl Seçin</option>
                                                    </select>

                                                    <span class="field-validation-valid" data-valmsg-for="ilEdit" data-valmsg-replace="true"></span>

                                                </div>
                                                <div class="form-group col-12">
                                                    <label>İlçe</label>

                                                    <select class="form-control" id="ilceEdit" onchange="loadMahalleler()" disabled>
                                                        <option value="">İlçe Seçin</option>
                                                    </select>
                                                    <span class="field-validation-valid" data-valmsg-for="ilceEdit" data-valmsg-replace="true"></span>

                                                </div>
                                                <div class="form-group col-12">
                                                    <label>Mahalle</label>

                                                    <select class="form-control" id="mahalleEdit" disabled>
                                                        <option value="">Mahalle Seçin</option>
                                                    </select>
                                                    <span class="field-validation-valid" data-valmsg-for="mahalleEdit" data-valmsg-replace="true"></span>

                                                </div>

                                                <div class="form-group col-12 ">
                                                    <label for="address"></label>
                                                    @Html.TextAreaFor(model => a.address, new { name = "address", @class = "form-control", placeholder = "Adres", id = "editaddres", rows = "4" })
                                                    @Html.ValidationMessageFor(model => a.address, "")
                                                </div>
                                                <div class="form-group">
                                                    <a href="#" id="editsubmitbtn" class="btn btn-primary">Adresi Kaydet</a>
                                                </div>
                                            </div>

                                        </form>

                                    </div>
                                </div>
                            </div>


                        }
                        else
                        {
                            <div class=" row mt-5 mb-5 ">
                                <div class="col-12 d-flex justify-content-center">
                                    <h1 class="text-center">Sepetinde ürün bulunmamaktadır</h1>

                                </div>
                                <div class="col-12 d-flex justify-content-center">
                                    <img src="~/img/cartempty.png" style="width:inherit;max-width:fit-content;" />
                                </div>
                                <div class="col-12 d-flex justify-content-center">
                                    <a href="/Home/Shop" class="btn btn-primary">Hemen Alışverişe Başla</a>
                                </div>
                            </div>
                        }

                    }
                    else
                    {


                        <div class="row mt-5 mb-5 w-auto ">
                            <div class="col-12 d-flex justify-content-center">
                                <h1 class="text-center">Sepeti kullanabilmek için giriş yapmalısınız</h1>

                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <img src="~/img/login.png" style="width:inherit;max-width:fit-content;" />
                            </div>
                            <div class="col-12 d-flex justify-content-center">
                                <a href="/Home/Auth" class="btn btn-primary">Hemen Giriş Yap</a>
                            </div>
                        </div>



                    }
                }
            </div>
        </div>
    </div>


</body>
<script src="~/Scripts/jquery-3.7.1.js"></script>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script src="~/Content/scripts/locationdata.js"></script>
<script src="~/Content/scripts/common.js"></script>

<script>
   
    //const phoneInputField = document.querySelector("#phone");
    //const phoneInput = window.intlTelInput(phoneInputField, {


    //    onlyCountries: ["tr"],
    //    allowDropdown: false,
    //    strictMode: true,
    //    separateDialCode: true,
    //    showFlags: true,
    //    utilsScript:
    //        "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
    //});

    const errorMap = ["Geçersiz Numara", "Geçersiz Ülke Kodu", "Çok Kısa", "Çok Uzun", "Geçersiz Numara"];

    const initTelInput = (input, errorMsg, validMsg) => {
        const iti = window.intlTelInput(input, {
            initialCountry: "tr",
            onlyCountries: ["tr"],
            strictMode: true,
            allowDropdown: false,
            separateDialCode: true,
            showFlags: true,
            utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/23.4.1/js/utils.js"
        });

        const reset = () => {
            input.classList.remove("error");
            input.classList.remove("valid");
            errorMsg.innerHTML = "";
            errorMsg.classList.add("hide");
            validMsg.classList.add("hide");
        };

        const showError = (msg) => {
            input.classList.add("error");
            errorMsg.innerHTML = msg;
            errorMsg.classList.remove("hide");
        };

        const validateNumber = () => {
            reset();
            if (input.value.trim()) {
                if (iti.isValidNumber()) {
                    validMsg.classList.remove("hide");
                    input.classList.add("valid");
                } else {
                    const errorCode = iti.getValidationError();
                    const msg = errorMap[errorCode] || "Geçersiz Numara";
                    showError(msg);
                }
            }else {
                showError("Telefon numarası gereklidir");
            }
        };

        input.addEventListener('keyup', validateNumber);
        input.addEventListener('change', validateNumber);
    };

    const input = document.querySelector("#phone");
    const errorMsg = document.querySelector("#error-msg");
    const validMsg = document.querySelector("#valid-msg");
    initTelInput(input, errorMsg, validMsg);

    const editinput = document.querySelector("#editphone");
    const editerrorMsg = document.querySelector("#edit-error-msg");
    const editvalidMsg = document.querySelector("#edit-valid-msg");
    initTelInput(editinput, editerrorMsg, editvalidMsg);


   

    function SelectAddress(Id) {

        $.ajax({
            url: '/Home/GetAddress/',
            type: 'POST',
            data: { Id: Id },
            beforeSend: function () {
                $('#loading').show();
            },
            success: function (result) {
                if (result.success) {


                    toastr.success(result.message);
                    var addresscards = $("#cartAddress");
                    addresscards.empty();
                    var i = 1;
                    result.adressList.forEach(function (address) {
                        var card = " <div class='col-12'><div class='card mb-2 text-start  address-card' addressId='"+address.id+"'><div class='card-body'><h5 class='card-title'>" + address.title + "</h5> <h6 class='card-subtitle mb-2 text-body-secondary'>" + address.name + " " + address.surname + "</h6><p class='card-text'>" + address.address + "</p> </div></div></div>   <a href='#Adres' data-bs-toggle='offcanvas' data-bs-target='#staticBackdrop' aria-controls='staticBackdrop'> Adres Değiştir / Ekle</a >";

                        addresscards.append(card);
                        i++;
                    });




                } else {
                    toastr.error(result.message);
                }
            }, complete: function () {
                $('#loading').hide();
            },
            error: function (xhr, status, error) {
                console.error('AJAX Error: ' + error);
            }
        });

    }


    function removeItemInCart(id) {
        $.ajax({
            url: '/Home/removeItemInCart/',
            type: 'POST',
            data: { Id: id },
            beforeSend: function () {
                $('#loading').show();
            },
            success: function (result) {
                console.log(result);
                var total = $(result).find("#subtotal").text();

                if (total == "₺0") {
                    $(".main-layout").fadeOut(300, function () {
                        $(this).empty();

                        $(this).append(`
            <div class="row mt-3 mb-3">
                <div class="col-12 d-flex justify-content-center">
                    <h1 class="text-center">Sepetinde ürün bulunmamaktadır</h1>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <img src="/img/cartempty.png" style="width:inherit;max-width:fit-content;" />
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <a href="/Home/Shop" class="btn btn-primary">Hemen Alışverişe Başla</a>
                </div>
            </div>
        `).fadeIn(300);

                    });
                }
 else
                {
                    var table = $(result).find(".shop-table tbody tr");
                    $('.cart-wrapper').empty().append(table);
                    $("#cart-total").text(total);
                    $("#subtotal").text(total);
                    var cargo = $(result).find(".cargo").html();
                    var lasttotal = $(result).find(".lasttotal").html();
                    var progress = $(result).find(".free-progress-bar").html();
                    $(".cargo").empty();
                    $(".cargo").append(cargo);

                    $(".lasttotal").empty();
                    $(".lasttotal").append(lasttotal);

                    $('.couponadded').remove();
                    $('#address').after($(result).find(".couponadded"));
                    $(".free-progress-bar").empty();
                    $(".free-progress-bar").append(progress);

                }


                var cartCount = $(result).find(".cart-item").length;

                $(".header-cart-count").text(cartCount);

            }, complete: function () {
                $('#loading').hide();
            }
        });
    }

    $(document).ready(function () {


        $('.cart-wrapper').on('click', '.qty-count--minus', function () {
            var tr = $(this).closest('tr');
            var id = tr.attr('id');

            $.ajax({
                url: '/Home/minusItemInCart/',
                type: 'POST',
                data: { Id: id },
                beforeSend: function () {
                    $('#loading').show(); 
                },
                success: function (result) {
                    console.log(result);

                    var total = $(result).find("#subtotal").text();

                    if (total == "₺0") {
                        $(".main-layout").fadeOut(300, function () {
                            $(this).empty();

                            $(this).append(`
            <div class="row mt-3 mb-3">
                <div class="col-12 d-flex justify-content-center">
                    <h1 class="text-center">Sepetinde ürün bulunmamaktadır</h1>
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <img src="/img/cartempty.png" style="width:inherit;max-width:fit-content;" />
                </div>
                <div class="col-12 d-flex justify-content-center">
                    <a href="/Home/Shop" class="btn btn-primary">Hemen Alışverişe Başla</a>
                </div>
            </div>
        `).fadeIn(300);

                        });
                    }
 else {
                        var table = $(result).find(".shop-table tbody tr");
                        $('.cart-wrapper').empty().append(table);
                        $("#cart-total").text(total);
                        $("#subtotal").text(total);
                        var cargo = $(result).find(".cargo").html();
                        var lasttotal = $(result).find(".lasttotal").html();
                        var progress = $(result).find(".free-progress-bar").html();

                        $(".cargo").empty();
                        $(".cargo").append(cargo);

                        $(".lasttotal").empty();
                        $(".lasttotal").append(lasttotal);


                        $(".free-progress-bar").empty();
                        $(".free-progress-bar").append(progress);

                        $('.couponadded').remove();
                        $('#address').after($(result).find(".couponadded"));





                    }
                    var cartCount = $(result).find(".cart-item").length;

                    $(".header-cart-count").text(cartCount);

                } , complete: function () {
                    $('#loading').hide();
                },
            });
          

        });

        $('.cart-wrapper').on('click', '.qty-count--add', function () {
            var tr = $(this).closest('tr');
            var id = tr.attr('id');
            $.ajax({
                url: '/Home/increaseItemInCart/',
                type: 'POST',
                data: { Id: id },
                beforeSend: function () {
                    $('#loading').show();
                },
                success: function (result) {
                    console.log(result);
                    var table = $(result).find(".shop-table tbody tr");
                    $('.cart-wrapper').empty().append(table);
                    var total = $(result).find("#subtotal").text();
                    $("#cart-total").text(total);
                    $("#subtotal").text(total);
                    var cargo = $(result).find(".cargo").html();
                    var lasttotal = $(result).find(".lasttotal").html();
                    var progress = $(result).find(".free-progress-bar").html();

                    $(".cargo").empty();
                    $(".cargo").append(cargo);

                    $(".lasttotal").empty();
                    $(".lasttotal").append(lasttotal);


                    $('.couponadded').remove();
                    $('#address').after($(result).find(".couponadded"));
                    $(".free-progress-bar").empty();
                    $(".free-progress-bar").append(progress);

                }
                , complete: function () {
                    $('#loading').hide();
                },
            });
        });


        $('.checkout').on('click', '.btn-order', function () {
            var addressid = $('#cartAddress .card').attr("addressId");
            var token = $('#checkout input[name="__RequestVerificationToken"]').val();

            var formData = new FormData();
            formData.append("AddressId", addressid);

            formData.append("__RequestVerificationToken", token);

            if (addressid != null) {
                $.ajax({
                    url: '/Home/Order/',
                    type: 'POST',
                    data: formData,
                    contentType: false,
                    processData: false,
                    beforeSend: function () {
                        $('#loading').show();
                    },
                    success: function (result) {

                        if (result.success) {
                            toastr.success(result.message);
                            window.location = "/Home/Payment";
                        } else {
                            toastr.error(result.message);

                            setTimeout(() => {
                                window.location.reload();
                            }, 4000);

                        }


                    }, complete: function () {
                        $('#loading').hide();
                    },
                });
            } else {
                toastr.error("Ürünlerimizi size ulaştırabilmek için adres seçilmesi zorunludur.Lütfen adres seçiniz.");
            }

        });


        $('.actions-wrapper').on('click', '#addCoupon', function (e) {
            e.preventDefault();
            var couponCode = $('#couponCode').val();

            $.ajax({
                url: '/Home/UseCoupon/',
                type: 'POST',
                data: {CouponCode:couponCode},

                success: function (result) {
                    if (result.success) {
                        toastr.success(result.message);
                        $('.couponadded').remove();
                        $('#address').after(

                            "   <tr class='couponadded' style='border:none;'><th> İndirim</th>  </tr>  <tr class='couponadded'>   <th>Kupon Kodu Uygulandı:<strong></br>" + result.coupon + "</strong></th>  <td>İndirim </br>-&#8378;" + result.discount +"</td>  </tr> "
                        );


                        var total = '@(toplam.ToString().Replace(",","."))';
                        console.log('@toplam');
                        console.log(total);

                        console.log(parseFloat(total));
                        console.log(parseFloat(result.discount));


                

                        var lasttotal = $(result.cartItemsHtml).find(".lasttotal").html();
                        console.log("last " + lasttotal);
                        $(".lasttotal").empty();
                        $(".lasttotal").append(lasttotal);

                        //$('#cart-total').text("₺"+(parseFloat(total) - parseFloat(result.discount.replace(',','.'))));
                    } else {
                        toastr.error(result.message);
                    }

                }
            });
        });


    });




    var QtyInput = (function () {
        var $qtyInputs = $(".qty-input");

        if (!$qtyInputs.length) {
            return;
        }

        var $inputs = $qtyInputs.find(".product-qty");
        var $countBtn = $qtyInputs.find(".qty-count");
        var qtyMin = parseInt($inputs.attr("min"));
        var qtyMax = parseInt($inputs.attr("max"));

        $inputs.change(function () {
            var $this = $(this);
            var $minusBtn = $this.siblings(".qty-count--minus");
            var $addBtn = $this.siblings(".qty-count--add");
            var qty = parseInt($this.val());

            if (isNaN(qty) || qty <= qtyMin) {
                $this.val(qtyMin);
                $minusBtn.attr("disabled", true);
            } else {
                $minusBtn.attr("disabled", false);

                if (qty >= qtyMax) {
                    $this.val(qtyMax);
                    $addBtn.attr('disabled', true);
                } else {
                    $this.val(qty);
                    $addBtn.attr('disabled', false);
                }
            }
        });

        $countBtn.click(function () {
            var operator = this.dataset.action;
            var $this = $(this);
            var $input = $this.siblings(".product-qty");
            var qty = parseInt($input.val());

            if (operator == "add") {
                qty += 1;
                if (qty >= qtyMin + 1) {
                    $this.siblings(".qty-count--minus").attr("disabled", false);
                }

                if (qty >= qtyMax) {
                    $this.attr("disabled", true);
                }
            } else {
                qty = qty <= qtyMin ? qtyMin : (qty -= 1);

                if (qty == qtyMin) {
                    $this.attr("disabled", true);
                }

                if (qty < qtyMax) {
                    $this.siblings(".qty-count--add").attr("disabled", false);
                }
            }

            $input.val(qty);
        });
    })();

   


</script>
