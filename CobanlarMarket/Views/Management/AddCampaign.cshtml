
@{
    ViewBag.Title = "AddCampaign";
    Layout = "~/Views/Shared/_ManagementLayout.cshtml";
}
<link rel="stylesheet" href="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.css">
<link href="https://cdn.jsdelivr.net/npm/pretty-checkbox@3.0/dist/pretty-checkbox.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/gh/bbbootstrap/libraries@main/choices.min.js"></script>


<style>
    .img-pre {
        position: relative;
        width:300px;
        max-height: 300px;
        overflow-y: auto;
    }

    .remove-img-btn {
        position: absolute;
        top: 4px;
        right: 3px;
        color: red;
        border: none;
        border-radius: 50%;
        cursor: pointer;
        z-index: 10;
        font-size: 20px;
    }

        .remove-img-btn:hover {
            color: darkred;
        }
</style>
<div class=" mt-5 ml-5 mr-5">
    

    <form id="campaignForm">

        @{
            CobanlarMarket.Models.campaigns c = new CobanlarMarket.Models.campaigns();
        }
        <div class="row justify-content-center">

            <div class="col-12 bg-white p-5">
                <div class="col-12 pt-4 pb-4 pl-0 " >
                    <h3>Kampanya Ekle</h3>

                </div>
                <div class="form-group">
                    <label>Resim Yükle *</label>

                    <div class="form-group img-parent">
                        <div class="d-flex img-pre" id="image-container">
                            <!-- Resimler buraya eklenecek -->
                        </div>

                        <input type="file" class="form-control" id="campaignImg" accept=".jpg,.jpeg,.png" aria-describedby="campaignImg" onchange="dosyaOnizlemeNew(this);">

                    </div>
                    <small class="form-text text-muted">
                        1 resim eklemeniz gerekiyor. Eklediğiniz resimlerin kalitesine dikkat edin, arka plan rengi standartlarına uyun. Ürünün tüm ayrıntıları gösterdiğine dikkat edin.
                    </small>
                </div>
                <div class="form-group">
                    <label for="title">Kampanya Başlığı *</label>
                    @*<input type="text" class="form-control" id="name" placeholder="Kategori İsmi">*@
                    @Html.EditorFor(model => c.campaign_title, "Kampanya Başlığı", new { htmlAttributes = new { name = "name", @class = "form-control", placeholder = "Kampanya Başlığı", id = "title" } })
                    @Html.ValidationMessageFor(model => c.campaign_title, "")


                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="startdate">Başlangıç Tarihi</label>

                        @Html.EditorFor(model => c.campaign_start_date, "Başlangıç Tarihi", new { htmlAttributes = new { type = "date", name = "startdate", @class = "form-control", placeholder = "Başlangıç Tarihi", id = "startdate" } })
                        @Html.ValidationMessageFor(model => c.campaign_start_date, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group col-md-6">
                        <label for="enddate">Bitiş Tarihi</label>

                        @Html.EditorFor(model => c.campaign_end_date, "Bitiş Tarihi", new { htmlAttributes = new { type = "date", name = "enddate", @class = "form-control", placeholder = "Başlangıç Tarihi", id = "enddate", required = "required", disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => c.campaign_end_date, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group ">
                    <label>Kampanya Ürünleri</label>

                    <select class="label ui selection fluid dropdown   " id="products" multiple>

                        @foreach (var item in Model.products)
                        {
                            <option value="@item.id">@item.name</option>
                        }
                    </select>
                </div>

                <div class="form-group">
                    <button class="btn btn-outline-primary float-right" id="submitbtn">Kaydet</button>
                </div>
            </div>

        </div>

    </form>
</div>




<script>

    $(document).ready(function () {
        var element = document.getElementById('products');
        var products = new Choices('#products', {
            removeItemButton: true,
        });



        $('#submitbtn').on("click", function (e) {
            e.preventDefault();

            var img = $('#campaignImg')[0].files[0];
            var title = $('#title').val() || "";
            var startdate = $('#startdate').val() || "";
            var enddate = $('#enddate').val() || "" ;



            var formData = new FormData();
            formData.append("Img", img);

            formData.append("Title", title);
            formData.append("StartDate", startdate);
            formData.append("EndDate", enddate);
            var selectedProducts = products.getValue(true);
            formData.append("Products", selectedProducts);

            if ($('#campaignForm').valid()) {

                $.ajax({
                    url: '/Management/AddCampaign/',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        if (response.success) {
                            toastr.success(response.message);

                            document.getElementById("campaignForm").reset();
                            // Ekrandaki resmi kaldır
                            $('#image-container').empty();
                            // Input dosya listesini güncelle

                            $("#campaignImg").remove();
                            $(".img-parent").append("  <input type='file' class='form-control' id='campaignImg' accept='.jpg,.jpeg,.png' aria-describedby='campaignImg' onchange='dosyaOnizlemeNew(this);'>")

                        } else {
                            toastr.error(response.message);
                        }

                    }, error: function (e) {


                    }

                });


            }


        });






    });

    var selectedFiles = []; // Seçilen dosyaları saklamak için dizi

    function dosyaOnizlemeNew(input) {
        var container = $('#image-container');
        container.empty(); // Eski resimleri temizle
        selectedFiles = Array.from(input.files); // Seçilen dosyaları diziye ekle

        selectedFiles.forEach(file => {
            var reader = new FileReader();
            reader.onload = function (e) {
                var img = $('<img>').attr('src', e.target.result).addClass('img-thumbnail');
                var removeBtn = $('<button>').addClass('remove-img-btn').html('<i class="mdi mdi-close icon"></i>').on('click', function (event) {
                    event.preventDefault(); 
                    removeImage(file);
                });
                var wrapper = $('<div>').addClass('p-2 position-relative').append(img).append(removeBtn);
                container.append(wrapper);
            };
            reader.readAsDataURL(file);
        });
    }
    function removeImage(fileToRemove) {
        var reader = new FileReader();
        reader.onload = function (e) {
            var fileDataURL = e.target.result;

            // Dosyayı seçilen dosyalardan çıkar
            selectedFiles = selectedFiles.filter(file => file !== fileToRemove);

            // Ekrandaki resmi kaldır
            $('#image-container img').each(function () {
                if ($(this).attr('src') === fileDataURL) {
                    $(this).parent().remove();
                }
            });

            // Input dosya listesini güncelle

            $("#campaignImg").remove();
            $(".img-parent").append("  <input type='file' class='form-control' id='campaignImg' accept='.jpg,.jpeg,.png' aria-describedby='campaignImg' onchange='dosyaOnizlemeNew(this);'>")


        };
        reader.readAsDataURL(fileToRemove);
    }



    document.addEventListener("DOMContentLoaded", function () {
        var startDateInput = document.getElementById("startdate");
        var endDateInput = document.getElementById("enddate");

        // Başlangıç tarihini bugünden başlat
        var today = new Date().toISOString().split("T")[0];
        startDateInput.setAttribute("min", today);

        // Başlangıç tarihi seçildiğinde bitiş tarihini aktif hale getir
        startDateInput.addEventListener("change", function () {
            endDateInput.disabled = false;
            endDateInput.setAttribute("min", startDateInput.value);
           

            if (endDateInput.value < startDateInput.value && endDateInput.value != "") {
                alert("Bitiş tarihi, başlangıç tarihinden önce olamaz!");
                endDateInput.value = "";
            }
        });

        // Bitiş tarihini başlangıç tarihinden önce seçilemez yap
        endDateInput.addEventListener("change", function () {
            if (endDateInput.value < startDateInput.value  ) {
                alert("Bitiş tarihi, başlangıç tarihinden önce olamaz!");
                endDateInput.value = "";
            }
        });
    });


</script>