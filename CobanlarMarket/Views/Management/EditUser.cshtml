@model CobanlarMarket.Models.users
@{
    ViewBag.Title = "EditUser";
    Layout = "~/Views/Shared/_ManagementLayout.cshtml";
}

<div class="mt-5 ml-5 mr-5">
   
    <form id="UserForm">
        <div class="row justify-content-center  bg-white mb-5">
            <div class="col-12  pt-4 pb-4 pl-5  ">
                <h3>Kullanıcı Düzenle</h3>

            </div>


            <div class="col-md-5 p-5">
                <div class="form-group">
                    <label for="UserImg" class="col-12 pl-0">Kullanıcı Fotoğrafı</label>
                    <div class="img bg-primary" id="imgpre" style="height:300px;">
                        <img class="img" src="@Model.avatar" alt="User Img" style="block-size:300px;" />
                    </div>

                    <input type="file" class="form-control" id="userImg" accept=".jpg,.jpeg,.png" aria-describedby="userImg" onchange="dosyaOnizlemeNew(this);">
                </div>
            </div>
            <div class="col-md-7 p-5">
                <div class="form-group">
                    <label for="name">İsim *</label>
                    @Html.EditorFor(model => model.first_name, new { htmlAttributes = new { name = "name", @class = "form-control", placeholder = "İsim", id = "name" } })
                    @Html.ValidationMessageFor(model => model.first_name, "")
                </div>
                <div class="form-group">
                    <label for="surname">Soyad*</label>
                    @Html.EditorFor(model => model.last_name, new { htmlAttributes = new { name = "surname", @class = "form-control", placeholder = "Soyad", id = "surname" } })
                    @Html.ValidationMessageFor(model => model.last_name, "")
                </div>
                <div class="form-group">
                    <label for="userName">Kullanıcı Adı *</label>
                    @Html.EditorFor(model => model.username, new { htmlAttributes = new { name = "userName", @class = "form-control", placeholder = "Kullanıcı Adı", id = "userName" } })
                    @Html.ValidationMessageFor(model => model.username, "")
                </div>
                <div class="form-group">
                    <label for="password">Şifre *</label>
                    @Html.EditorFor(model => model.password, new { htmlAttributes = new { type = "password", name = "password", @class = "form-control", placeholder = "Şifre", id = "password" } })
                    @Html.ValidationMessageFor(model => model.password, "")
                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="Email">E-mail *</label>
                        @Html.EditorFor(model => model.email, new { htmlAttributes = new { type = "email", name = "Email", @class = "form-control", placeholder = "Email", id = "Email" } })
                        @Html.ValidationMessageFor(model => model.email, "")
                    </div>
                    <div class="form-group col-md-6">
                        <label for="tel">Telefon Numarası *</label>
                        @Html.EditorFor(model => model.phone_number, new { htmlAttributes = new { type = "tel", name = "tel", @class = "form-control", placeholder = "Telefon Numarası", id = "tel" } })
                        @Html.ValidationMessageFor(model => model.phone_number, "")
                    </div>
                </div>
                <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"></script>
                <div class="form-group">
                    <label for="birthdate">Doğum Tarihi </label>
                    <input type="date" id="birthdate" name="birthdate" class="form-control" placeholder="Doğum Tarihi">
                    @Html.ValidationMessageFor(model => model.birth_of_date, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <button id="submitbtn" class="btn btn-outline-primary float-right" uid="@Model.id">Kaydet</button>
                </div>
            </div>
        </div>
    </form>
</div>

<script>
    $(document).ready(function() {
            var dateFromServer = '@Model.birth_of_date'

    // Moment.js kullanarak tarihi biçimlendirin
    var formattedDate = moment(dateFromServer, "DD.MM.YYYY HH:mm:ss").format("YYYY-MM-DD");

    // Date input alanının değerini ayarlayın
    document.getElementById('birthdate').value = formattedDate;

        $('#submitbtn').on("click", function(e) {
            e.preventDefault();

            if ($('#UserForm').valid()) {
                var formData = new FormData();
                var img = $('#userImg')[0].files[0];
                formData.append('Img', img);

                var Id = $(this).attr("uid");
                var name = $('#name').val() ||"";
                var surname = $('#surname').val() || "";
                var username = $('#userName').val() || "";
                var password = $('#password').val() || "";
                var email = $('#Email').val() || "";
                var tel = $('#tel').val() || "";
                var birthdate = $('#birthdate').val() || "";

                formData.append('Id', Id);
                formData.append('Name', name);
                formData.append('Surname', surname);
                formData.append('Username', username);
                formData.append('Password', password);
                formData.append('Email', email);
                formData.append('Tel', tel);
                formData.append('Birthdate', birthdate);

                $.ajax({
                    url: '/Management/EditUser/',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(result) {
                        if (result.success) {
                            toastr.success('Kullanıcı Düzenleme Başarılı', 'Başarılı');
                        } else {
                            toastr.error(result.message, 'Hata');
                        }
                     
                        
                    },
                    error: function(xhr, status, error) {
                        //toastr.error('Kullanıcı Düzenlenirken Bir Hata Oluştu', 'Hata');
                        window.location.href="/Management/UserList";

                        console.error('AJAX Error: ' + error);
                    }
                });
            }
        });
    });



    function dosyaOnizlemeNew(input) {
        if (input.files && input.files[0]) {
            var file = input.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var preview = document.getElementById('imgpre');
                preview.innerHTML = "";
                preview.style.width = 'fit-content';
                var imgElement = document.createElement('img');
                imgElement.src = e.target.result;
                imgElement.style.height = 'inherit';
                preview.append(imgElement);
            };

            reader.readAsDataURL(file);
        }
    }
</script>
