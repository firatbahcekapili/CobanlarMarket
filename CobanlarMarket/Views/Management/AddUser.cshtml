
@{
    ViewBag.Title = "AddUser";
    Layout = "~/Views/Shared/_ManagementLayout.cshtml";
}
<style>
    img {
        object-fit: contain;
    }

</style>
<div class=" mt-5 ml-5 mr-5">

    <form id="UserForm" action="/Management/AddUser" method="post">
        @Html.AntiForgeryToken()
        @{
            CobanlarMarket.Models.users u = new CobanlarMarket.Models.users();
        }
        <div class="row justify-content-center  bg-white mb-5">
            <div class="col-12  pt-4 pb-4 pl-5  ">
                <h3>Kullanıcı Ekle</h3>

            </div>
            <div class="col-md-5  p-5">
                <div class="form-group">
                    <label for="UserImg">Kullanıcı Fotoğrafı</label>
                    <div class="img bg-primary" id="imgpre" style="height:300px;">

                    </div>
                    @*<input type="file" class="form-control" id="userImg" placeholder="">*@
                    <input type="file" class="form-control" id="userImg" accept=".jpg,.jpeg,.png" aria-describedby="userImg" onchange="dosyaOnizlemeNew(this);">
                </div>
            </div>
            <div class="col-md-7  p-5">
                <div class="form-group">
                    <label for="name">İsim *</label>
                    @*<input type="text" class="form-control" id="name" placeholder="İsim">*@
                    @Html.EditorFor(model => u.first_name, "İsim", new { htmlAttributes = new { name = "name", @class = "form-control", placeholder = "İsim", id = "name" } })
                    @Html.ValidationMessageFor(model => u.first_name, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="surname">Soyisim *</label>
                    @*<input type="text" class="form-control" id="surname" placeholder="Soyad">*@
                    @Html.EditorFor(model => u.last_name, "Soyad", new { htmlAttributes = new { name = "surname", @class = "form-control", placeholder = "Soyad", id = "surname" } })
                    @Html.ValidationMessageFor(model => u.last_name, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <label for="userName">Kullanıcı Adı *</label>
                    @*<input type="text" class="form-control" id="userName" placeholder="Kullanıcı">*@
                    @Html.EditorFor(model => u.username, "Kullanıcı Adı", new { htmlAttributes = new { name = "userName", @class = "form-control", placeholder = "Kullanıcı Adı", id = "userName" } })
                    @Html.ValidationMessageFor(model => u.username, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label for="password">Şifre *</label>
                    @*<input type="password" class="form-control" name="password" value="" id="password" />*@
                    @Html.EditorFor(model => u.password, "Şifre", new { htmlAttributes = new { type = "password", name = "password", @class = "form-control", placeholder = "Şifre", id = "password" } })
                    @Html.ValidationMessageFor(model => u.password, "", new { @class = "text-danger" })


                </div>
                <div class="form-row">
                    <div class="form-group col-md-6">
                        <label for="Email">E-mail *</label>
                        @*<input type="email" class="form-control" id="Email" />*@
                        @Html.EditorFor(model => u.email, "Email", new { htmlAttributes = new { type = "email", name = "Email", @class = "form-control", placeholder = "Email", id = "Email" } })
                        @Html.ValidationMessageFor(model => u.email, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group col-md-6">
                        <label for="tel">Telefon Numarası *</label>
                        @*<input type="tel" class="form-control" id="tel" />*@
                        @Html.EditorFor(model => u.phone_number, "Telefon Numarası", new { htmlAttributes = new { type = "tel", name = "tel", @class = "form-control", placeholder = "Telefon Numarası", id = "tel" } })
                        @Html.ValidationMessageFor(model => u.phone_number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <label for="birthdate">Doğum Tarihi </label>
                    @*<input type="date" class="form-control" name="password" value="" id="birthdate" />*@
                    @Html.EditorFor(model => u.birth_of_date, "Doğum Tarihi", new { htmlAttributes = new { type = "date", name = "birthdate", @class = "form-control", placeholder = "Doğum Tarihi", id = "birthdate" } })
                    @Html.ValidationMessageFor(model => u.birth_of_date, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    <button id="submitbtn" class="btn btn-outline-primary float-right">Kaydet</button>
                </div>
            </div>

        </div>

    </form>
</div>



<script>

    $(document).ready(function () {

        $('#submitbtn').on("click", function (e) {
            e.preventDefault();

            if ($('#UserForm').valid()) {
                var formData = new FormData();

                // Dosya giriş alanından seçilen dosyayı al
                var img = $('#userImg')[0].files[0];
                formData.append('Img', img);

                var name = $('#name').val() || "";
                var surname = $('#surname').val() || "";
                var username = $('#userName').val() || "";
                var password = $('#password').val() || "";
                var email = $('#Email').val() || "";
                var tel = $('#tel').val() || "";
                var birthdate = $('#birthdate').val() || "";

                formData.append('Name', name);
                formData.append('Surname', surname);
                formData.append('Username', username);
                formData.append('Password', password);
                formData.append('Email', email);
                formData.append('Tel', tel);
                formData.append('Birthdate', birthdate);
                formData.append("__RequestVerificationToken", $('#UserForm input[name="__RequestVerificationToken"]').val());

                $.ajax({
                    url: '/Management/AddUser/',
                    type: 'POST',
                    data: formData,
                    processData: false,  
                    contentType: false, 
                    success: function (result) {


                        if (result.success) {
                            toastr.success(result.message);
                        } else {
                            toastr.error(result.message);
                        }

                    },
                    error: function (xhr, status, error) {
                        console.error('AJAX Error: ' + error);
                    }
                });
            }
        });

    });

    function dosyaOnizlemeNew(input) {
        if (input.files && input.files[0]) {
            var file = input.files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var preview = document.getElementById('imgpre');
                preview.innerHTML="";
                preview.style.width = 'fit-content';
                var imgElement = document.createElement('img');
                imgElement.src = e.target.result;
                imgElement.style.height = 'inherit';   
                preview.append(imgElement);
            };

            reader.readAsDataURL(file);
        } 
    }
</script>